#include <iostream>
#include <stdio.h>
#include <inttypes.h>
#include <unordered_map>
struct host{
private:
  uint32_t _ip;
public:
  host(uint32_t ui32ip):_ip(ui32ip){};
  std::string getip()
  {
    std::string ipaddr;
    ipaddr += std::to_string((_ip >> 24 & 0xff)) += ".";
    ipaddr += std::to_string((_ip >> 16 & 0xff)) += ".";
    ipaddr += std::to_string((_ip >> 8 & 0xff)) += ".";
    ipaddr += std::to_string((_ip & 0xff));
    return ipaddr;
  };
};

int main()
{
  uint32_t ip = (192 << 24) | (168 << 16) | (1 << 8) | 2;
  host me{ip};
  std::string text_ip = me.getip();
  std::cout << text_ip << "\n";
  std::cout << "host size: " << sizeof(me) << "\n";
  uint32_t max = 0xffffffff;
  std::cout << "max: " << max << "\n";
  return 0;
}
